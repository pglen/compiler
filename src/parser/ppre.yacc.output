Nonterminals useless in grammar

    def1args


Terminals unused in grammar

    NOT2
    CH2


State 1 conflicts: 13 shift/reduce, 2 reduce/reduce
State 3 conflicts: 1 shift/reduce
State 4 conflicts: 2 reduce/reduce
State 8 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 12 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 28 conflicts: 1 shift/reduce
State 31 conflicts: 3 shift/reduce, 1 reduce/reduce
State 35 conflicts: 3 shift/reduce, 1 reduce/reduce
State 36 conflicts: 3 shift/reduce, 1 reduce/reduce
State 50 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 55 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce, 1 reduce/reduce
State 57 conflicts: 1 shift/reduce
State 62 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 73 conflicts: 3 shift/reduce, 1 reduce/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 79 conflicts: 3 shift/reduce, 1 reduce/reduce
State 80 conflicts: 3 shift/reduce, 1 reduce/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 3 shift/reduce, 1 reduce/reduce
State 85 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 105 conflicts: 1 shift/reduce
State 106 conflicts: 1 shift/reduce
State 120 conflicts: 3 shift/reduce, 1 reduce/reduce
State 121 conflicts: 1 shift/reduce, 19 reduce/reduce
State 122 conflicts: 1 shift/reduce
State 123 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce, 1 reduce/reduce
State 127 conflicts: 1 shift/reduce, 1 reduce/reduce
State 128 conflicts: 1 shift/reduce, 1 reduce/reduce
State 129 conflicts: 1 shift/reduce, 1 reduce/reduce
State 130 conflicts: 1 shift/reduce, 1 reduce/reduce
State 131 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: all1 $end

    1 all1: ε
    2     | all1 all2

    3 all2: define1
    4     | msg1
    5     | undef1
    6     | err1
    7     | nl1
    8     | mac1
    9     | ifdef1
   10     | elifdef1
   11     | else1
   12     | endif1
   13     | COMMENT2
   14     | sp1mb

   15 idd1: strx1
   16     | expr1

   17 define1: DEF2 sp1mb idd1 sp1mb semibm
   18        | DEF2 sp1mb idd1 sp1mb idd1 sp1mb semibm

   19 undef1: UNDEF2 sp1mb idd1 sp1mb semibm
   20       | sp1b UNDEF2 sp1m

   21 err1: ERR2 sp1b STR2 sp1m

   22 strx1: STR2 sp1mb
   23      | ID2 sp1mb
   24      | STR2 sp1mb PLUS2 sp1mb strx1 sp1mb
   25      | STR2 sp1mb PLUS2 sp1mb expr1 sp1mb
   26      | expr1 sp1mb PLUS2 sp1mb STR2 sp1mb
   27      | STR2 sp1mb PLUS2 sp1mb STR2

   28 semib: ε
   29      | NL2
   30      | sp1mb NL2
   31      | SEMI2
   32      | sp1mb SEMI2

   33 semibm: semib

   34 nl1: ENL2 sp1mb semibm

   35 msg1: MSG2 sp1mb idd1 sp1mb semibm

   36 mac1: MAC2 sp1b ID2 sp1b STR2 sp1m

   37 ifdef1: IFDEF2 sp1mb idd1 sp1mb semibm

   38 elifdef1: sp1b ELIFDEF2 sp1m ID2 sp1m

   39 endif1: ENDIF2 sp1mb semibm

   40 else1: ELSE2 sp1mb semibm

   41 sp1: SP2
   42    | NL2

   43 sp1b: ε
   44     | sp1

   45 sp1m: SP2
   46     | sp1m SP2

   47 sp1mb: ε
   48      | sp1m

   49 expr1: expr2
   50      | expr1 sp1mb OR2 sp1mb expr2
   51      | expr1 sp1mb XOR2 sp1mb expr2
   52      | expr1 sp1mb AND2 sp1mb expr2
   53      | expr1 sp1mb RSHIFT2 sp1mb expr2
   54      | expr1 sp1mb LSHIFT2 sp1mb expr2

   55 expr2: expr3
   56      | expr2 sp1mb PLUS2 sp1mb expr3
   57      | expr2 sp1mb MINUS2 sp1mb expr3

   58 expr3: expr4
   59      | expr3 sp1mb MULT2 sp1mb expr4
   60      | expr3 sp1mb DIV2 sp1mb expr4
   61      | expr3 sp1mb MOD2 sp1mb expr4

   62 expr4: expr5
   63      | sp1mb PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb

   64 expr5: sp1mb NUM2 sp1mb


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS2 <sym> (258) 24 25 26 27 56
    MINUS2 <sym> (259) 57
    MULT2 <sym> (260) 59
    DIV2 <sym> (261) 60
    MOD2 <sym> (262) 61
    OR2 <sym> (263) 50
    AND2 <sym> (264) 52
    XOR2 <sym> (265) 51
    NOT2 <sym> (266)
    LSHIFT2 <sym> (267) 54
    RSHIFT2 <sym> (268) 53
    PAREN12 <sym> (269) 63
    PAREN22 <sym> (270) 63
    SEMI2 <sym> (271) 31 32
    ENL2 <sym> (272) 34
    CH2 <sym> (273)
    ID2 <sym> (274) 23 36 38
    SP2 <sym> (275) 41 45 46
    NL2 <sym> (276) 29 30 42
    STR2 <sym> (277) 21 22 24 25 26 27 36
    COMMENT2 <sym> (278) 13
    NUM2 <sym> (279) 64
    MAC2 <sym> (280) 36
    IFDEF2 <sym> (281) 37
    ENDIF2 <sym> (282) 39
    ELSE2 <sym> (283) 40
    ELIFDEF2 <sym> (284) 38
    DEF2 <sym> (285) 17 18
    UNDEF2 <sym> (286) 19 20
    ERR2 <sym> (287) 21
    MSG2 <sym> (288) 35


Nonterminals, with rules where they appear

    $accept (34)
        on left: 0
    all1 <sym> (35)
        on left: 1 2
        on right: 0 2
    all2 <sym> (36)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14
        on right: 2
    idd1 <sym> (37)
        on left: 15 16
        on right: 17 18 19 35 37
    define1 <sym> (38)
        on left: 17 18
        on right: 3
    undef1 <sym> (39)
        on left: 19 20
        on right: 5
    err1 <sym> (40)
        on left: 21
        on right: 6
    strx1 <sym> (41)
        on left: 22 23 24 25 26 27
        on right: 15 24
    semib <sym> (42)
        on left: 28 29 30 31 32
        on right: 33
    semibm <sym> (43)
        on left: 33
        on right: 17 18 19 34 35 37 39 40
    nl1 <sym> (44)
        on left: 34
        on right: 7
    msg1 <sym> (45)
        on left: 35
        on right: 4
    mac1 <sym> (46)
        on left: 36
        on right: 8
    ifdef1 <sym> (47)
        on left: 37
        on right: 9
    elifdef1 <sym> (48)
        on left: 38
        on right: 10
    endif1 <sym> (49)
        on left: 39
        on right: 12
    else1 <sym> (50)
        on left: 40
        on right: 11
    sp1 <sym> (51)
        on left: 41 42
        on right: 44
    sp1b <sym> (52)
        on left: 43 44
        on right: 20 21 36 38
    sp1m <sym> (53)
        on left: 45 46
        on right: 20 21 36 38 46 48
    sp1mb <sym> (54)
        on left: 47 48
        on right: 14 17 18 19 22 23 24 25 26 27 30 32 34 35 37 39 40 50 51 52 53 54 56 57 59 60 61 63 64
    expr1 <sym> (55)
        on left: 49 50 51 52 53 54
        on right: 16 25 26 50 51 52 53 54 63
    expr2 <sym> (56)
        on left: 55 56 57
        on right: 49 50 51 52 53 54 56 57
    expr3 <sym> (57)
        on left: 58 59 60 61
        on right: 55 56 57 59 60 61
    expr4 <sym> (58)
        on left: 62 63
        on right: 58 59 60 61
    expr5 <sym> (59)
        on left: 64
        on right: 62


State 0

    0 $accept: • all1 $end

    $default  reduce using rule 1 (all1)

    all1  go to state 1


State 1

    0 $accept: all1 • $end
    2 all1: all1 • all2

    $end      shift, and go to state 2
    ENL2      shift, and go to state 3
    SP2       shift, and go to state 4
    NL2       shift, and go to state 5
    COMMENT2  shift, and go to state 6
    MAC2      shift, and go to state 7
    IFDEF2    shift, and go to state 8
    ENDIF2    shift, and go to state 9
    ELSE2     shift, and go to state 10
    DEF2      shift, and go to state 11
    UNDEF2    shift, and go to state 12
    ERR2      shift, and go to state 13
    MSG2      shift, and go to state 14

    $end      [reduce using rule 47 (sp1mb)]
    ENL2      [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 47 (sp1mb)]
    NL2       [reduce using rule 47 (sp1mb)]
    COMMENT2  [reduce using rule 47 (sp1mb)]
    MAC2      [reduce using rule 47 (sp1mb)]
    IFDEF2    [reduce using rule 47 (sp1mb)]
    ENDIF2    [reduce using rule 47 (sp1mb)]
    ELSE2     [reduce using rule 47 (sp1mb)]
    ELIFDEF2  reduce using rule 43 (sp1b)
    ELIFDEF2  [reduce using rule 47 (sp1mb)]
    DEF2      [reduce using rule 47 (sp1mb)]
    UNDEF2    [reduce using rule 43 (sp1b)]
    UNDEF2    [reduce using rule 47 (sp1mb)]
    ERR2      [reduce using rule 47 (sp1mb)]
    MSG2      [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 43 (sp1b)

    all2      go to state 15
    define1   go to state 16
    undef1    go to state 17
    err1      go to state 18
    nl1       go to state 19
    msg1      go to state 20
    mac1      go to state 21
    ifdef1    go to state 22
    elifdef1  go to state 23
    endif1    go to state 24
    else1     go to state 25
    sp1       go to state 26
    sp1b      go to state 27
    sp1m      go to state 28
    sp1mb     go to state 29


State 2

    0 $accept: all1 $end •

    $default  accept


State 3

   34 nl1: ENL2 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 31


State 4

   41 sp1: SP2 •
   45 sp1m: SP2 •

    ELIFDEF2  reduce using rule 41 (sp1)
    ELIFDEF2  [reduce using rule 45 (sp1m)]
    UNDEF2    reduce using rule 41 (sp1)
    UNDEF2    [reduce using rule 45 (sp1m)]
    $default  reduce using rule 45 (sp1m)


State 5

   42 sp1: NL2 •

    $default  reduce using rule 42 (sp1)


State 6

   13 all2: COMMENT2 •

    $default  reduce using rule 13 (all2)


State 7

   36 mac1: MAC2 • sp1b ID2 sp1b STR2 sp1m

    SP2  shift, and go to state 32
    NL2  shift, and go to state 5

    $default  reduce using rule 43 (sp1b)

    sp1   go to state 26
    sp1b  go to state 33


State 8

   37 ifdef1: IFDEF2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 34


State 9

   39 endif1: ENDIF2 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 35


State 10

   40 else1: ELSE2 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 36


State 11

   17 define1: DEF2 • sp1mb idd1 sp1mb semibm
   18        | DEF2 • sp1mb idd1 sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 37


State 12

   19 undef1: UNDEF2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 38


State 13

   21 err1: ERR2 • sp1b STR2 sp1m

    SP2  shift, and go to state 32
    NL2  shift, and go to state 5

    $default  reduce using rule 43 (sp1b)

    sp1   go to state 26
    sp1b  go to state 39


State 14

   35 msg1: MSG2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 40


State 15

    2 all1: all1 all2 •

    $default  reduce using rule 2 (all1)


State 16

    3 all2: define1 •

    $default  reduce using rule 3 (all2)


State 17

    5 all2: undef1 •

    $default  reduce using rule 5 (all2)


State 18

    6 all2: err1 •

    $default  reduce using rule 6 (all2)


State 19

    7 all2: nl1 •

    $default  reduce using rule 7 (all2)


State 20

    4 all2: msg1 •

    $default  reduce using rule 4 (all2)


State 21

    8 all2: mac1 •

    $default  reduce using rule 8 (all2)


State 22

    9 all2: ifdef1 •

    $default  reduce using rule 9 (all2)


State 23

   10 all2: elifdef1 •

    $default  reduce using rule 10 (all2)


State 24

   12 all2: endif1 •

    $default  reduce using rule 12 (all2)


State 25

   11 all2: else1 •

    $default  reduce using rule 11 (all2)


State 26

   44 sp1b: sp1 •

    $default  reduce using rule 44 (sp1b)


State 27

   20 undef1: sp1b • UNDEF2 sp1m
   38 elifdef1: sp1b • ELIFDEF2 sp1m ID2 sp1m

    ELIFDEF2  shift, and go to state 41
    UNDEF2    shift, and go to state 42


State 28

   46 sp1m: sp1m • SP2
   48 sp1mb: sp1m •

    SP2  shift, and go to state 43

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)


State 29

   14 all2: sp1mb •

    $default  reduce using rule 14 (all2)


State 30

   45 sp1m: SP2 •

    $default  reduce using rule 45 (sp1m)


State 31

   34 nl1: ENL2 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 47
    sp1m    go to state 28
    sp1mb   go to state 48


State 32

   41 sp1: SP2 •

    $default  reduce using rule 41 (sp1)


State 33

   36 mac1: MAC2 sp1b • ID2 sp1b STR2 sp1m

    ID2  shift, and go to state 49


State 34

   37 ifdef1: IFDEF2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 50
    SP2   shift, and go to state 30
    STR2  shift, and go to state 51

    $default  reduce using rule 47 (sp1mb)

    idd1   go to state 52
    strx1  go to state 53
    sp1m   go to state 28
    sp1mb  go to state 54
    expr1  go to state 55
    expr2  go to state 56
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 35

   39 endif1: ENDIF2 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 60
    sp1m    go to state 28
    sp1mb   go to state 48


State 36

   40 else1: ELSE2 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 61
    sp1m    go to state 28
    sp1mb   go to state 48


State 37

   17 define1: DEF2 sp1mb • idd1 sp1mb semibm
   18        | DEF2 sp1mb • idd1 sp1mb idd1 sp1mb semibm

    ID2   shift, and go to state 50
    SP2   shift, and go to state 30
    STR2  shift, and go to state 51

    $default  reduce using rule 47 (sp1mb)

    idd1   go to state 62
    strx1  go to state 53
    sp1m   go to state 28
    sp1mb  go to state 54
    expr1  go to state 55
    expr2  go to state 56
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 38

   19 undef1: UNDEF2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 50
    SP2   shift, and go to state 30
    STR2  shift, and go to state 51

    $default  reduce using rule 47 (sp1mb)

    idd1   go to state 63
    strx1  go to state 53
    sp1m   go to state 28
    sp1mb  go to state 54
    expr1  go to state 55
    expr2  go to state 56
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 39

   21 err1: ERR2 sp1b • STR2 sp1m

    STR2  shift, and go to state 64


State 40

   35 msg1: MSG2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 50
    SP2   shift, and go to state 30
    STR2  shift, and go to state 51

    $default  reduce using rule 47 (sp1mb)

    idd1   go to state 65
    strx1  go to state 53
    sp1m   go to state 28
    sp1mb  go to state 54
    expr1  go to state 55
    expr2  go to state 56
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 41

   38 elifdef1: sp1b ELIFDEF2 • sp1m ID2 sp1m

    SP2  shift, and go to state 30

    sp1m  go to state 66


State 42

   20 undef1: sp1b UNDEF2 • sp1m

    SP2  shift, and go to state 30

    sp1m  go to state 67


State 43

   46 sp1m: sp1m SP2 •

    $default  reduce using rule 46 (sp1m)


State 44

   31 semib: SEMI2 •

    $default  reduce using rule 31 (semib)


State 45

   29 semib: NL2 •

    $default  reduce using rule 29 (semib)


State 46

   33 semibm: semib •

    $default  reduce using rule 33 (semibm)


State 47

   34 nl1: ENL2 sp1mb semibm •

    $default  reduce using rule 34 (nl1)


State 48

   30 semib: sp1mb • NL2
   32      | sp1mb • SEMI2

    SEMI2  shift, and go to state 68
    NL2    shift, and go to state 69


State 49

   36 mac1: MAC2 sp1b ID2 • sp1b STR2 sp1m

    SP2  shift, and go to state 32
    NL2  shift, and go to state 5

    $default  reduce using rule 43 (sp1b)

    sp1   go to state 26
    sp1b  go to state 70


State 50

   23 strx1: ID2 • sp1mb

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 71


State 51

   22 strx1: STR2 • sp1mb
   24      | STR2 • sp1mb PLUS2 sp1mb strx1 sp1mb
   25      | STR2 • sp1mb PLUS2 sp1mb expr1 sp1mb
   27      | STR2 • sp1mb PLUS2 sp1mb STR2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 72


State 52

   37 ifdef1: IFDEF2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 73


State 53

   15 idd1: strx1 •

    $default  reduce using rule 15 (idd1)


State 54

   63 expr4: sp1mb • PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb
   64 expr5: sp1mb • NUM2 sp1mb

    PAREN12  shift, and go to state 74
    NUM2     shift, and go to state 75


State 55

   16 idd1: expr1 •
   26 strx1: expr1 • sp1mb PLUS2 sp1mb STR2 sp1mb
   50 expr1: expr1 • sp1mb OR2 sp1mb expr2
   51      | expr1 • sp1mb XOR2 sp1mb expr2
   52      | expr1 • sp1mb AND2 sp1mb expr2
   53      | expr1 • sp1mb RSHIFT2 sp1mb expr2
   54      | expr1 • sp1mb LSHIFT2 sp1mb expr2

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    OR2       reduce using rule 47 (sp1mb)
    AND2      reduce using rule 47 (sp1mb)
    XOR2      reduce using rule 47 (sp1mb)
    LSHIFT2   reduce using rule 47 (sp1mb)
    RSHIFT2   reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 16 (idd1)]
    $default  reduce using rule 16 (idd1)

    sp1m   go to state 28
    sp1mb  go to state 76


State 56

   49 expr1: expr2 •
   56 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   57      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    PLUS2     [reduce using rule 49 (expr1)]
    MINUS2    reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 49 (expr1)]
    $default  reduce using rule 49 (expr1)

    sp1m   go to state 28
    sp1mb  go to state 77


State 57

   55 expr2: expr3 •
   59 expr3: expr3 • sp1mb MULT2 sp1mb expr4
   60      | expr3 • sp1mb DIV2 sp1mb expr4
   61      | expr3 • sp1mb MOD2 sp1mb expr4

    SP2  shift, and go to state 30

    MULT2     reduce using rule 47 (sp1mb)
    DIV2      reduce using rule 47 (sp1mb)
    MOD2      reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 55 (expr2)]
    $default  reduce using rule 55 (expr2)

    sp1m   go to state 28
    sp1mb  go to state 78


State 58

   58 expr3: expr4 •

    $default  reduce using rule 58 (expr3)


State 59

   62 expr4: expr5 •

    $default  reduce using rule 62 (expr4)


State 60

   39 endif1: ENDIF2 sp1mb semibm •

    $default  reduce using rule 39 (endif1)


State 61

   40 else1: ELSE2 sp1mb semibm •

    $default  reduce using rule 40 (else1)


State 62

   17 define1: DEF2 sp1mb idd1 • sp1mb semibm
   18        | DEF2 sp1mb idd1 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 79


State 63

   19 undef1: UNDEF2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 80


State 64

   21 err1: ERR2 sp1b STR2 • sp1m

    SP2  shift, and go to state 30

    sp1m  go to state 81


State 65

   35 msg1: MSG2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 82


State 66

   38 elifdef1: sp1b ELIFDEF2 sp1m • ID2 sp1m
   46 sp1m: sp1m • SP2

    ID2  shift, and go to state 83
    SP2  shift, and go to state 43


State 67

   20 undef1: sp1b UNDEF2 sp1m •
   46 sp1m: sp1m • SP2

    SP2  shift, and go to state 43

    SP2       [reduce using rule 20 (undef1)]
    $default  reduce using rule 20 (undef1)


State 68

   32 semib: sp1mb SEMI2 •

    $default  reduce using rule 32 (semib)


State 69

   30 semib: sp1mb NL2 •

    $default  reduce using rule 30 (semib)


State 70

   36 mac1: MAC2 sp1b ID2 sp1b • STR2 sp1m

    STR2  shift, and go to state 84


State 71

   23 strx1: ID2 sp1mb •

    $default  reduce using rule 23 (strx1)


State 72

   22 strx1: STR2 sp1mb •
   24      | STR2 sp1mb • PLUS2 sp1mb strx1 sp1mb
   25      | STR2 sp1mb • PLUS2 sp1mb expr1 sp1mb
   27      | STR2 sp1mb • PLUS2 sp1mb STR2

    PLUS2  shift, and go to state 85

    $default  reduce using rule 22 (strx1)


State 73

   37 ifdef1: IFDEF2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 86
    sp1m    go to state 28
    sp1mb   go to state 48


State 74

   63 expr4: sp1mb PAREN12 • sp1mb expr1 sp1mb PAREN22 sp1mb

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 87


State 75

   64 expr5: sp1mb NUM2 • sp1mb

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 88


State 76

   26 strx1: expr1 sp1mb • PLUS2 sp1mb STR2 sp1mb
   50 expr1: expr1 sp1mb • OR2 sp1mb expr2
   51      | expr1 sp1mb • XOR2 sp1mb expr2
   52      | expr1 sp1mb • AND2 sp1mb expr2
   53      | expr1 sp1mb • RSHIFT2 sp1mb expr2
   54      | expr1 sp1mb • LSHIFT2 sp1mb expr2

    PLUS2    shift, and go to state 89
    OR2      shift, and go to state 90
    AND2     shift, and go to state 91
    XOR2     shift, and go to state 92
    LSHIFT2  shift, and go to state 93
    RSHIFT2  shift, and go to state 94


State 77

   56 expr2: expr2 sp1mb • PLUS2 sp1mb expr3
   57      | expr2 sp1mb • MINUS2 sp1mb expr3

    PLUS2   shift, and go to state 95
    MINUS2  shift, and go to state 96


State 78

   59 expr3: expr3 sp1mb • MULT2 sp1mb expr4
   60      | expr3 sp1mb • DIV2 sp1mb expr4
   61      | expr3 sp1mb • MOD2 sp1mb expr4

    MULT2  shift, and go to state 97
    DIV2   shift, and go to state 98
    MOD2   shift, and go to state 99


State 79

   17 define1: DEF2 sp1mb idd1 sp1mb • semibm
   18        | DEF2 sp1mb idd1 sp1mb • idd1 sp1mb semibm

    SEMI2  shift, and go to state 44
    ID2    shift, and go to state 50
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45
    STR2   shift, and go to state 51

    PAREN12   reduce using rule 47 (sp1mb)
    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    NUM2      reduce using rule 47 (sp1mb)
    $default  reduce using rule 28 (semib)

    idd1    go to state 100
    strx1   go to state 53
    semib   go to state 46
    semibm  go to state 101
    sp1m    go to state 28
    sp1mb   go to state 102
    expr1   go to state 55
    expr2   go to state 56
    expr3   go to state 57
    expr4   go to state 58
    expr5   go to state 59


State 80

   19 undef1: UNDEF2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 103
    sp1m    go to state 28
    sp1mb   go to state 48


State 81

   21 err1: ERR2 sp1b STR2 sp1m •
   46 sp1m: sp1m • SP2

    SP2  shift, and go to state 43

    SP2       [reduce using rule 21 (err1)]
    $default  reduce using rule 21 (err1)


State 82

   35 msg1: MSG2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 104
    sp1m    go to state 28
    sp1mb   go to state 48


State 83

   38 elifdef1: sp1b ELIFDEF2 sp1m ID2 • sp1m

    SP2  shift, and go to state 30

    sp1m  go to state 105


State 84

   36 mac1: MAC2 sp1b ID2 sp1b STR2 • sp1m

    SP2  shift, and go to state 30

    sp1m  go to state 106


State 85

   24 strx1: STR2 sp1mb PLUS2 • sp1mb strx1 sp1mb
   25      | STR2 sp1mb PLUS2 • sp1mb expr1 sp1mb
   27      | STR2 sp1mb PLUS2 • sp1mb STR2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 107


State 86

   37 ifdef1: IFDEF2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 37 (ifdef1)


State 87

   63 expr4: sp1mb PAREN12 sp1mb • expr1 sp1mb PAREN22 sp1mb

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr1  go to state 108
    expr2  go to state 56
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 88

   64 expr5: sp1mb NUM2 sp1mb •

    $default  reduce using rule 64 (expr5)


State 89

   26 strx1: expr1 sp1mb PLUS2 • sp1mb STR2 sp1mb

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 109


State 90

   50 expr1: expr1 sp1mb OR2 • sp1mb expr2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 110


State 91

   52 expr1: expr1 sp1mb AND2 • sp1mb expr2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 111


State 92

   51 expr1: expr1 sp1mb XOR2 • sp1mb expr2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 112


State 93

   54 expr1: expr1 sp1mb LSHIFT2 • sp1mb expr2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 113


State 94

   53 expr1: expr1 sp1mb RSHIFT2 • sp1mb expr2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 114


State 95

   56 expr2: expr2 sp1mb PLUS2 • sp1mb expr3

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 115


State 96

   57 expr2: expr2 sp1mb MINUS2 • sp1mb expr3

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 116


State 97

   59 expr3: expr3 sp1mb MULT2 • sp1mb expr4

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 117


State 98

   60 expr3: expr3 sp1mb DIV2 • sp1mb expr4

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 118


State 99

   61 expr3: expr3 sp1mb MOD2 • sp1mb expr4

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 119


State 100

   18 define1: DEF2 sp1mb idd1 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 120


State 101

   17 define1: DEF2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 17 (define1)


State 102

   30 semib: sp1mb • NL2
   32      | sp1mb • SEMI2
   63 expr4: sp1mb • PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb
   64 expr5: sp1mb • NUM2 sp1mb

    PAREN12  shift, and go to state 74
    SEMI2    shift, and go to state 68
    NL2      shift, and go to state 69
    NUM2     shift, and go to state 75


State 103

   19 undef1: UNDEF2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 19 (undef1)


State 104

   35 msg1: MSG2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 35 (msg1)


State 105

   38 elifdef1: sp1b ELIFDEF2 sp1m ID2 sp1m •
   46 sp1m: sp1m • SP2

    SP2  shift, and go to state 43

    SP2       [reduce using rule 38 (elifdef1)]
    $default  reduce using rule 38 (elifdef1)


State 106

   36 mac1: MAC2 sp1b ID2 sp1b STR2 sp1m •
   46 sp1m: sp1m • SP2

    SP2  shift, and go to state 43

    SP2       [reduce using rule 36 (mac1)]
    $default  reduce using rule 36 (mac1)


State 107

   24 strx1: STR2 sp1mb PLUS2 sp1mb • strx1 sp1mb
   25      | STR2 sp1mb PLUS2 sp1mb • expr1 sp1mb
   27      | STR2 sp1mb PLUS2 sp1mb • STR2

    ID2   shift, and go to state 50
    SP2   shift, and go to state 30
    STR2  shift, and go to state 121

    $default  reduce using rule 47 (sp1mb)

    strx1  go to state 122
    sp1m   go to state 28
    sp1mb  go to state 54
    expr1  go to state 123
    expr2  go to state 56
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 108

   50 expr1: expr1 • sp1mb OR2 sp1mb expr2
   51      | expr1 • sp1mb XOR2 sp1mb expr2
   52      | expr1 • sp1mb AND2 sp1mb expr2
   53      | expr1 • sp1mb RSHIFT2 sp1mb expr2
   54      | expr1 • sp1mb LSHIFT2 sp1mb expr2
   63 expr4: sp1mb PAREN12 sp1mb expr1 • sp1mb PAREN22 sp1mb

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 124


State 109

   26 strx1: expr1 sp1mb PLUS2 sp1mb • STR2 sp1mb

    STR2  shift, and go to state 125


State 110

   50 expr1: expr1 sp1mb OR2 sp1mb • expr2

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr2  go to state 126
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 111

   52 expr1: expr1 sp1mb AND2 sp1mb • expr2

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr2  go to state 127
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 112

   51 expr1: expr1 sp1mb XOR2 sp1mb • expr2

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr2  go to state 128
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 113

   54 expr1: expr1 sp1mb LSHIFT2 sp1mb • expr2

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr2  go to state 129
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 114

   53 expr1: expr1 sp1mb RSHIFT2 sp1mb • expr2

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr2  go to state 130
    expr3  go to state 57
    expr4  go to state 58
    expr5  go to state 59


State 115

   56 expr2: expr2 sp1mb PLUS2 sp1mb • expr3

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr3  go to state 131
    expr4  go to state 58
    expr5  go to state 59


State 116

   57 expr2: expr2 sp1mb MINUS2 sp1mb • expr3

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr3  go to state 132
    expr4  go to state 58
    expr5  go to state 59


State 117

   59 expr3: expr3 sp1mb MULT2 sp1mb • expr4

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr4  go to state 133
    expr5  go to state 59


State 118

   60 expr3: expr3 sp1mb DIV2 sp1mb • expr4

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr4  go to state 134
    expr5  go to state 59


State 119

   61 expr3: expr3 sp1mb MOD2 sp1mb • expr4

    SP2  shift, and go to state 30

    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 54
    expr4  go to state 135
    expr5  go to state 59


State 120

   18 define1: DEF2 sp1mb idd1 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 44
    SP2    shift, and go to state 30
    NL2    shift, and go to state 45

    SEMI2     [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 28 (semib)]
    NL2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 28 (semib)

    semib   go to state 46
    semibm  go to state 136
    sp1m    go to state 28
    sp1mb   go to state 48


State 121

   22 strx1: STR2 • sp1mb
   24      | STR2 • sp1mb PLUS2 sp1mb strx1 sp1mb
   25      | STR2 • sp1mb PLUS2 sp1mb expr1 sp1mb
   27      | STR2 • sp1mb PLUS2 sp1mb STR2
   27      | STR2 sp1mb PLUS2 sp1mb STR2 •

    SP2  shift, and go to state 30

    $end      reduce using rule 27 (strx1)
    $end      [reduce using rule 47 (sp1mb)]
    PLUS2     reduce using rule 47 (sp1mb)
    PAREN12   reduce using rule 27 (strx1)
    PAREN12   [reduce using rule 47 (sp1mb)]
    SEMI2     reduce using rule 27 (strx1)
    SEMI2     [reduce using rule 47 (sp1mb)]
    ENL2      reduce using rule 27 (strx1)
    ENL2      [reduce using rule 47 (sp1mb)]
    ID2       reduce using rule 27 (strx1)
    ID2       [reduce using rule 47 (sp1mb)]
    SP2       [reduce using rule 27 (strx1)]
    SP2       [reduce using rule 47 (sp1mb)]
    NL2       reduce using rule 27 (strx1)
    NL2       [reduce using rule 47 (sp1mb)]
    STR2      reduce using rule 27 (strx1)
    STR2      [reduce using rule 47 (sp1mb)]
    COMMENT2  reduce using rule 27 (strx1)
    COMMENT2  [reduce using rule 47 (sp1mb)]
    NUM2      reduce using rule 27 (strx1)
    NUM2      [reduce using rule 47 (sp1mb)]
    MAC2      reduce using rule 27 (strx1)
    MAC2      [reduce using rule 47 (sp1mb)]
    IFDEF2    reduce using rule 27 (strx1)
    IFDEF2    [reduce using rule 47 (sp1mb)]
    ENDIF2    reduce using rule 27 (strx1)
    ENDIF2    [reduce using rule 47 (sp1mb)]
    ELSE2     reduce using rule 27 (strx1)
    ELSE2     [reduce using rule 47 (sp1mb)]
    ELIFDEF2  reduce using rule 27 (strx1)
    ELIFDEF2  [reduce using rule 47 (sp1mb)]
    DEF2      reduce using rule 27 (strx1)
    DEF2      [reduce using rule 47 (sp1mb)]
    UNDEF2    reduce using rule 27 (strx1)
    UNDEF2    [reduce using rule 47 (sp1mb)]
    ERR2      reduce using rule 27 (strx1)
    ERR2      [reduce using rule 47 (sp1mb)]
    MSG2      reduce using rule 27 (strx1)
    MSG2      [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 27 (strx1)

    sp1m   go to state 28
    sp1mb  go to state 72


State 122

   24 strx1: STR2 sp1mb PLUS2 sp1mb strx1 • sp1mb

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 137


State 123

   25 strx1: STR2 sp1mb PLUS2 sp1mb expr1 • sp1mb
   26      | expr1 • sp1mb PLUS2 sp1mb STR2 sp1mb
   50 expr1: expr1 • sp1mb OR2 sp1mb expr2
   51      | expr1 • sp1mb XOR2 sp1mb expr2
   52      | expr1 • sp1mb AND2 sp1mb expr2
   53      | expr1 • sp1mb RSHIFT2 sp1mb expr2
   54      | expr1 • sp1mb LSHIFT2 sp1mb expr2

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 138


State 124

   50 expr1: expr1 sp1mb • OR2 sp1mb expr2
   51      | expr1 sp1mb • XOR2 sp1mb expr2
   52      | expr1 sp1mb • AND2 sp1mb expr2
   53      | expr1 sp1mb • RSHIFT2 sp1mb expr2
   54      | expr1 sp1mb • LSHIFT2 sp1mb expr2
   63 expr4: sp1mb PAREN12 sp1mb expr1 sp1mb • PAREN22 sp1mb

    OR2      shift, and go to state 90
    AND2     shift, and go to state 91
    XOR2     shift, and go to state 92
    LSHIFT2  shift, and go to state 93
    RSHIFT2  shift, and go to state 94
    PAREN22  shift, and go to state 139


State 125

   26 strx1: expr1 sp1mb PLUS2 sp1mb STR2 • sp1mb

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 140


State 126

   50 expr1: expr1 sp1mb OR2 sp1mb expr2 •
   56 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   57      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    PLUS2     [reduce using rule 50 (expr1)]
    MINUS2    reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 50 (expr1)]
    $default  reduce using rule 50 (expr1)

    sp1m   go to state 28
    sp1mb  go to state 77


State 127

   52 expr1: expr1 sp1mb AND2 sp1mb expr2 •
   56 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   57      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    PLUS2     [reduce using rule 52 (expr1)]
    MINUS2    reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 52 (expr1)]
    $default  reduce using rule 52 (expr1)

    sp1m   go to state 28
    sp1mb  go to state 77


State 128

   51 expr1: expr1 sp1mb XOR2 sp1mb expr2 •
   56 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   57      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    PLUS2     [reduce using rule 51 (expr1)]
    MINUS2    reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 51 (expr1)]
    $default  reduce using rule 51 (expr1)

    sp1m   go to state 28
    sp1mb  go to state 77


State 129

   54 expr1: expr1 sp1mb LSHIFT2 sp1mb expr2 •
   56 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   57      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    PLUS2     [reduce using rule 54 (expr1)]
    MINUS2    reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 54 (expr1)]
    $default  reduce using rule 54 (expr1)

    sp1m   go to state 28
    sp1mb  go to state 77


State 130

   53 expr1: expr1 sp1mb RSHIFT2 sp1mb expr2 •
   56 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   57      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 30

    PLUS2     reduce using rule 47 (sp1mb)
    PLUS2     [reduce using rule 53 (expr1)]
    MINUS2    reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 53 (expr1)]
    $default  reduce using rule 53 (expr1)

    sp1m   go to state 28
    sp1mb  go to state 77


State 131

   56 expr2: expr2 sp1mb PLUS2 sp1mb expr3 •
   59 expr3: expr3 • sp1mb MULT2 sp1mb expr4
   60      | expr3 • sp1mb DIV2 sp1mb expr4
   61      | expr3 • sp1mb MOD2 sp1mb expr4

    SP2  shift, and go to state 30

    MULT2     reduce using rule 47 (sp1mb)
    DIV2      reduce using rule 47 (sp1mb)
    MOD2      reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 56 (expr2)]
    $default  reduce using rule 56 (expr2)

    sp1m   go to state 28
    sp1mb  go to state 78


State 132

   57 expr2: expr2 sp1mb MINUS2 sp1mb expr3 •
   59 expr3: expr3 • sp1mb MULT2 sp1mb expr4
   60      | expr3 • sp1mb DIV2 sp1mb expr4
   61      | expr3 • sp1mb MOD2 sp1mb expr4

    SP2  shift, and go to state 30

    MULT2     reduce using rule 47 (sp1mb)
    DIV2      reduce using rule 47 (sp1mb)
    MOD2      reduce using rule 47 (sp1mb)
    SP2       [reduce using rule 57 (expr2)]
    $default  reduce using rule 57 (expr2)

    sp1m   go to state 28
    sp1mb  go to state 78


State 133

   59 expr3: expr3 sp1mb MULT2 sp1mb expr4 •

    $default  reduce using rule 59 (expr3)


State 134

   60 expr3: expr3 sp1mb DIV2 sp1mb expr4 •

    $default  reduce using rule 60 (expr3)


State 135

   61 expr3: expr3 sp1mb MOD2 sp1mb expr4 •

    $default  reduce using rule 61 (expr3)


State 136

   18 define1: DEF2 sp1mb idd1 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 18 (define1)


State 137

   24 strx1: STR2 sp1mb PLUS2 sp1mb strx1 sp1mb •

    $default  reduce using rule 24 (strx1)


State 138

   25 strx1: STR2 sp1mb PLUS2 sp1mb expr1 sp1mb •
   26      | expr1 sp1mb • PLUS2 sp1mb STR2 sp1mb
   50 expr1: expr1 sp1mb • OR2 sp1mb expr2
   51      | expr1 sp1mb • XOR2 sp1mb expr2
   52      | expr1 sp1mb • AND2 sp1mb expr2
   53      | expr1 sp1mb • RSHIFT2 sp1mb expr2
   54      | expr1 sp1mb • LSHIFT2 sp1mb expr2

    PLUS2    shift, and go to state 89
    OR2      shift, and go to state 90
    AND2     shift, and go to state 91
    XOR2     shift, and go to state 92
    LSHIFT2  shift, and go to state 93
    RSHIFT2  shift, and go to state 94

    $default  reduce using rule 25 (strx1)


State 139

   63 expr4: sp1mb PAREN12 sp1mb expr1 sp1mb PAREN22 • sp1mb

    SP2  shift, and go to state 30

    SP2       [reduce using rule 47 (sp1mb)]
    $default  reduce using rule 47 (sp1mb)

    sp1m   go to state 28
    sp1mb  go to state 141


State 140

   26 strx1: expr1 sp1mb PLUS2 sp1mb STR2 sp1mb •

    $default  reduce using rule 26 (strx1)


State 141

   63 expr4: sp1mb PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb •

    $default  reduce using rule 63 (expr4)
