Terminals unused in grammar

    NOT2
    CH2


State 1 conflicts: 14 shift/reduce, 2 reduce/reduce
State 3 conflicts: 1 shift/reduce
State 5 conflicts: 2 reduce/reduce
State 9 conflicts: 1 shift/reduce
State 10 conflicts: 1 shift/reduce
State 11 conflicts: 1 shift/reduce
State 12 conflicts: 1 shift/reduce
State 13 conflicts: 1 shift/reduce
State 14 conflicts: 1 shift/reduce
State 15 conflicts: 1 shift/reduce
State 29 conflicts: 1 shift/reduce
State 32 conflicts: 3 shift/reduce, 1 reduce/reduce
State 36 conflicts: 3 shift/reduce, 1 reduce/reduce
State 37 conflicts: 3 shift/reduce, 1 reduce/reduce
State 51 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 56 conflicts: 1 shift/reduce
State 57 conflicts: 1 shift/reduce, 1 reduce/reduce
State 58 conflicts: 1 shift/reduce
State 63 conflicts: 1 shift/reduce
State 64 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 66 conflicts: 1 shift/reduce
State 68 conflicts: 1 shift/reduce
State 74 conflicts: 3 shift/reduce, 1 reduce/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 80 conflicts: 3 shift/reduce, 1 reduce/reduce
State 81 conflicts: 3 shift/reduce, 1 reduce/reduce
State 82 conflicts: 3 shift/reduce, 1 reduce/reduce
State 83 conflicts: 3 shift/reduce, 1 reduce/reduce
State 86 conflicts: 1 shift/reduce
State 91 conflicts: 1 shift/reduce
State 92 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 108 conflicts: 1 shift/reduce
State 122 conflicts: 3 shift/reduce, 1 reduce/reduce
State 123 conflicts: 1 shift/reduce, 20 reduce/reduce
State 124 conflicts: 1 shift/reduce
State 125 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 128 conflicts: 1 shift/reduce, 1 reduce/reduce
State 129 conflicts: 1 shift/reduce, 1 reduce/reduce
State 130 conflicts: 1 shift/reduce, 1 reduce/reduce
State 131 conflicts: 1 shift/reduce, 1 reduce/reduce
State 132 conflicts: 1 shift/reduce, 1 reduce/reduce
State 133 conflicts: 1 shift/reduce
State 134 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce


Grammar

    0 $accept: all1 $end

    1 all1: ε
    2     | all1 all2

    3 all2: define1
    4     | msg1
    5     | undef1
    6     | err1
    7     | nl1
    8     | mac1
    9     | ifdef1
   10     | elifdef1
   11     | else1
   12     | endif1
   13     | COMMENT2
   14     | sp1mb
   15     | ID3

   16 idd1: strx1
   17     | expr1

   18 define1: DEF2 sp1mb idd1 sp1mb semibm
   19        | DEF2 sp1mb idd1 sp1mb idd1 sp1mb semibm

   20 undef1: UNDEF2 sp1mb idd1 sp1mb semibm
   21       | sp1b UNDEF2 sp1m

   22 err1: ERR2 sp1mb idd1 sp1mb semibm

   23 strx1: STR2 sp1mb
   24      | ID2 sp1mb
   25      | STR2 sp1mb PLUS2 sp1mb strx1 sp1mb
   26      | STR2 sp1mb PLUS2 sp1mb expr1 sp1mb
   27      | expr1 sp1mb PLUS2 sp1mb STR2 sp1mb
   28      | STR2 sp1mb PLUS2 sp1mb STR2

   29 semib: ε
   30      | NL2
   31      | sp1mb NL2
   32      | SEMI2
   33      | sp1mb SEMI2

   34 semibm: semib

   35 nl1: ENL2 sp1mb semibm

   36 msg1: MSG2 sp1mb idd1 sp1mb semibm

   37 mac1: MAC2 sp1b ID2 sp1b STR2 sp1m

   38 ifdef1: IFDEF2 sp1mb idd1 sp1mb semibm

   39 elifdef1: sp1b ELIFDEF2 sp1m ID2 sp1m

   40 endif1: ENDIF2 sp1mb semibm

   41 else1: ELSE2 sp1mb semibm

   42 sp1: SP2
   43    | NL2

   44 sp1b: ε
   45     | sp1

   46 sp1m: SP2
   47     | sp1m SP2

   48 sp1mb: ε
   49      | sp1m

   50 expr1: expr2
   51      | expr1 sp1mb OR2 sp1mb expr2
   52      | expr1 sp1mb XOR2 sp1mb expr2
   53      | expr1 sp1mb AND2 sp1mb expr2
   54      | expr1 sp1mb RSHIFT2 sp1mb expr2
   55      | expr1 sp1mb LSHIFT2 sp1mb expr2

   56 expr2: expr3
   57      | expr2 sp1mb PLUS2 sp1mb expr3
   58      | expr2 sp1mb MINUS2 sp1mb expr3

   59 expr3: expr4
   60      | expr3 sp1mb MULT2 sp1mb expr4
   61      | expr3 sp1mb DIV2 sp1mb expr4
   62      | expr3 sp1mb MOD2 sp1mb expr4

   63 expr4: expr5
   64      | sp1mb PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb

   65 expr5: sp1mb NUM2 sp1mb


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS2 <sym> (258) 25 26 27 28 57
    MINUS2 <sym> (259) 58
    MULT2 <sym> (260) 60
    DIV2 <sym> (261) 61
    MOD2 <sym> (262) 62
    OR2 <sym> (263) 51
    AND2 <sym> (264) 53
    XOR2 <sym> (265) 52
    NOT2 <sym> (266)
    LSHIFT2 <sym> (267) 55
    RSHIFT2 <sym> (268) 54
    PAREN12 <sym> (269) 64
    PAREN22 <sym> (270) 64
    SEMI2 <sym> (271) 32 33
    ENL2 <sym> (272) 35
    CH2 <sym> (273)
    ID2 <sym> (274) 24 37 39
    ID3 <sym> (275) 15
    SP2 <sym> (276) 42 46 47
    NL2 <sym> (277) 30 31 43
    STR2 <sym> (278) 23 25 26 27 28 37
    COMMENT2 <sym> (279) 13
    NUM2 <sym> (280) 65
    MAC2 <sym> (281) 37
    IFDEF2 <sym> (282) 38
    ENDIF2 <sym> (283) 40
    ELSE2 <sym> (284) 41
    ELIFDEF2 <sym> (285) 39
    DEF2 <sym> (286) 18 19
    UNDEF2 <sym> (287) 20 21
    ERR2 <sym> (288) 22
    MSG2 <sym> (289) 36


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    all1 <sym> (36)
        on left: 1 2
        on right: 0 2
    all2 <sym> (37)
        on left: 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 2
    idd1 <sym> (38)
        on left: 16 17
        on right: 18 19 20 22 36 38
    define1 <sym> (39)
        on left: 18 19
        on right: 3
    undef1 <sym> (40)
        on left: 20 21
        on right: 5
    err1 <sym> (41)
        on left: 22
        on right: 6
    strx1 <sym> (42)
        on left: 23 24 25 26 27 28
        on right: 16 25
    semib <sym> (43)
        on left: 29 30 31 32 33
        on right: 34
    semibm <sym> (44)
        on left: 34
        on right: 18 19 20 22 35 36 38 40 41
    nl1 <sym> (45)
        on left: 35
        on right: 7
    msg1 <sym> (46)
        on left: 36
        on right: 4
    mac1 <sym> (47)
        on left: 37
        on right: 8
    ifdef1 <sym> (48)
        on left: 38
        on right: 9
    elifdef1 <sym> (49)
        on left: 39
        on right: 10
    endif1 <sym> (50)
        on left: 40
        on right: 12
    else1 <sym> (51)
        on left: 41
        on right: 11
    sp1 <sym> (52)
        on left: 42 43
        on right: 45
    sp1b <sym> (53)
        on left: 44 45
        on right: 21 37 39
    sp1m <sym> (54)
        on left: 46 47
        on right: 21 37 39 47 49
    sp1mb <sym> (55)
        on left: 48 49
        on right: 14 18 19 20 22 23 24 25 26 27 28 31 33 35 36 38 40 41 51 52 53 54 55 57 58 60 61 62 64 65
    expr1 <sym> (56)
        on left: 50 51 52 53 54 55
        on right: 17 26 27 51 52 53 54 55 64
    expr2 <sym> (57)
        on left: 56 57 58
        on right: 50 51 52 53 54 55 57 58
    expr3 <sym> (58)
        on left: 59 60 61 62
        on right: 56 57 58 60 61 62
    expr4 <sym> (59)
        on left: 63 64
        on right: 59 60 61 62
    expr5 <sym> (60)
        on left: 65
        on right: 63


State 0

    0 $accept: • all1 $end

    $default  reduce using rule 1 (all1)

    all1  go to state 1


State 1

    0 $accept: all1 • $end
    2 all1: all1 • all2

    $end      shift, and go to state 2
    ENL2      shift, and go to state 3
    ID3       shift, and go to state 4
    SP2       shift, and go to state 5
    NL2       shift, and go to state 6
    COMMENT2  shift, and go to state 7
    MAC2      shift, and go to state 8
    IFDEF2    shift, and go to state 9
    ENDIF2    shift, and go to state 10
    ELSE2     shift, and go to state 11
    DEF2      shift, and go to state 12
    UNDEF2    shift, and go to state 13
    ERR2      shift, and go to state 14
    MSG2      shift, and go to state 15

    $end      [reduce using rule 48 (sp1mb)]
    ENL2      [reduce using rule 48 (sp1mb)]
    ID3       [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 48 (sp1mb)]
    NL2       [reduce using rule 48 (sp1mb)]
    COMMENT2  [reduce using rule 48 (sp1mb)]
    MAC2      [reduce using rule 48 (sp1mb)]
    IFDEF2    [reduce using rule 48 (sp1mb)]
    ENDIF2    [reduce using rule 48 (sp1mb)]
    ELSE2     [reduce using rule 48 (sp1mb)]
    ELIFDEF2  reduce using rule 44 (sp1b)
    ELIFDEF2  [reduce using rule 48 (sp1mb)]
    DEF2      [reduce using rule 48 (sp1mb)]
    UNDEF2    [reduce using rule 44 (sp1b)]
    UNDEF2    [reduce using rule 48 (sp1mb)]
    ERR2      [reduce using rule 48 (sp1mb)]
    MSG2      [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 44 (sp1b)

    all2      go to state 16
    define1   go to state 17
    undef1    go to state 18
    err1      go to state 19
    nl1       go to state 20
    msg1      go to state 21
    mac1      go to state 22
    ifdef1    go to state 23
    elifdef1  go to state 24
    endif1    go to state 25
    else1     go to state 26
    sp1       go to state 27
    sp1b      go to state 28
    sp1m      go to state 29
    sp1mb     go to state 30


State 2

    0 $accept: all1 $end •

    $default  accept


State 3

   35 nl1: ENL2 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 32


State 4

   15 all2: ID3 •

    $default  reduce using rule 15 (all2)


State 5

   42 sp1: SP2 •
   46 sp1m: SP2 •

    ELIFDEF2  reduce using rule 42 (sp1)
    ELIFDEF2  [reduce using rule 46 (sp1m)]
    UNDEF2    reduce using rule 42 (sp1)
    UNDEF2    [reduce using rule 46 (sp1m)]
    $default  reduce using rule 46 (sp1m)


State 6

   43 sp1: NL2 •

    $default  reduce using rule 43 (sp1)


State 7

   13 all2: COMMENT2 •

    $default  reduce using rule 13 (all2)


State 8

   37 mac1: MAC2 • sp1b ID2 sp1b STR2 sp1m

    SP2  shift, and go to state 33
    NL2  shift, and go to state 6

    $default  reduce using rule 44 (sp1b)

    sp1   go to state 27
    sp1b  go to state 34


State 9

   38 ifdef1: IFDEF2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 35


State 10

   40 endif1: ENDIF2 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 36


State 11

   41 else1: ELSE2 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 37


State 12

   18 define1: DEF2 • sp1mb idd1 sp1mb semibm
   19        | DEF2 • sp1mb idd1 sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 38


State 13

   20 undef1: UNDEF2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 39


State 14

   22 err1: ERR2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 40


State 15

   36 msg1: MSG2 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 41


State 16

    2 all1: all1 all2 •

    $default  reduce using rule 2 (all1)


State 17

    3 all2: define1 •

    $default  reduce using rule 3 (all2)


State 18

    5 all2: undef1 •

    $default  reduce using rule 5 (all2)


State 19

    6 all2: err1 •

    $default  reduce using rule 6 (all2)


State 20

    7 all2: nl1 •

    $default  reduce using rule 7 (all2)


State 21

    4 all2: msg1 •

    $default  reduce using rule 4 (all2)


State 22

    8 all2: mac1 •

    $default  reduce using rule 8 (all2)


State 23

    9 all2: ifdef1 •

    $default  reduce using rule 9 (all2)


State 24

   10 all2: elifdef1 •

    $default  reduce using rule 10 (all2)


State 25

   12 all2: endif1 •

    $default  reduce using rule 12 (all2)


State 26

   11 all2: else1 •

    $default  reduce using rule 11 (all2)


State 27

   45 sp1b: sp1 •

    $default  reduce using rule 45 (sp1b)


State 28

   21 undef1: sp1b • UNDEF2 sp1m
   39 elifdef1: sp1b • ELIFDEF2 sp1m ID2 sp1m

    ELIFDEF2  shift, and go to state 42
    UNDEF2    shift, and go to state 43


State 29

   47 sp1m: sp1m • SP2
   49 sp1mb: sp1m •

    SP2  shift, and go to state 44

    SP2       [reduce using rule 49 (sp1mb)]
    $default  reduce using rule 49 (sp1mb)


State 30

   14 all2: sp1mb •

    $default  reduce using rule 14 (all2)


State 31

   46 sp1m: SP2 •

    $default  reduce using rule 46 (sp1m)


State 32

   35 nl1: ENL2 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 48
    sp1m    go to state 29
    sp1mb   go to state 49


State 33

   42 sp1: SP2 •

    $default  reduce using rule 42 (sp1)


State 34

   37 mac1: MAC2 sp1b • ID2 sp1b STR2 sp1m

    ID2  shift, and go to state 50


State 35

   38 ifdef1: IFDEF2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 51
    SP2   shift, and go to state 31
    STR2  shift, and go to state 52

    $default  reduce using rule 48 (sp1mb)

    idd1   go to state 53
    strx1  go to state 54
    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 56
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 36

   40 endif1: ENDIF2 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 61
    sp1m    go to state 29
    sp1mb   go to state 49


State 37

   41 else1: ELSE2 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 62
    sp1m    go to state 29
    sp1mb   go to state 49


State 38

   18 define1: DEF2 sp1mb • idd1 sp1mb semibm
   19        | DEF2 sp1mb • idd1 sp1mb idd1 sp1mb semibm

    ID2   shift, and go to state 51
    SP2   shift, and go to state 31
    STR2  shift, and go to state 52

    $default  reduce using rule 48 (sp1mb)

    idd1   go to state 63
    strx1  go to state 54
    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 56
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 39

   20 undef1: UNDEF2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 51
    SP2   shift, and go to state 31
    STR2  shift, and go to state 52

    $default  reduce using rule 48 (sp1mb)

    idd1   go to state 64
    strx1  go to state 54
    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 56
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 40

   22 err1: ERR2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 51
    SP2   shift, and go to state 31
    STR2  shift, and go to state 52

    $default  reduce using rule 48 (sp1mb)

    idd1   go to state 65
    strx1  go to state 54
    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 56
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 41

   36 msg1: MSG2 sp1mb • idd1 sp1mb semibm

    ID2   shift, and go to state 51
    SP2   shift, and go to state 31
    STR2  shift, and go to state 52

    $default  reduce using rule 48 (sp1mb)

    idd1   go to state 66
    strx1  go to state 54
    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 56
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 42

   39 elifdef1: sp1b ELIFDEF2 • sp1m ID2 sp1m

    SP2  shift, and go to state 31

    sp1m  go to state 67


State 43

   21 undef1: sp1b UNDEF2 • sp1m

    SP2  shift, and go to state 31

    sp1m  go to state 68


State 44

   47 sp1m: sp1m SP2 •

    $default  reduce using rule 47 (sp1m)


State 45

   32 semib: SEMI2 •

    $default  reduce using rule 32 (semib)


State 46

   30 semib: NL2 •

    $default  reduce using rule 30 (semib)


State 47

   34 semibm: semib •

    $default  reduce using rule 34 (semibm)


State 48

   35 nl1: ENL2 sp1mb semibm •

    $default  reduce using rule 35 (nl1)


State 49

   31 semib: sp1mb • NL2
   33      | sp1mb • SEMI2

    SEMI2  shift, and go to state 69
    NL2    shift, and go to state 70


State 50

   37 mac1: MAC2 sp1b ID2 • sp1b STR2 sp1m

    SP2  shift, and go to state 33
    NL2  shift, and go to state 6

    $default  reduce using rule 44 (sp1b)

    sp1   go to state 27
    sp1b  go to state 71


State 51

   24 strx1: ID2 • sp1mb

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 72


State 52

   23 strx1: STR2 • sp1mb
   25      | STR2 • sp1mb PLUS2 sp1mb strx1 sp1mb
   26      | STR2 • sp1mb PLUS2 sp1mb expr1 sp1mb
   28      | STR2 • sp1mb PLUS2 sp1mb STR2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 73


State 53

   38 ifdef1: IFDEF2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 74


State 54

   16 idd1: strx1 •

    $default  reduce using rule 16 (idd1)


State 55

   64 expr4: sp1mb • PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb
   65 expr5: sp1mb • NUM2 sp1mb

    PAREN12  shift, and go to state 75
    NUM2     shift, and go to state 76


State 56

   17 idd1: expr1 •
   27 strx1: expr1 • sp1mb PLUS2 sp1mb STR2 sp1mb
   51 expr1: expr1 • sp1mb OR2 sp1mb expr2
   52      | expr1 • sp1mb XOR2 sp1mb expr2
   53      | expr1 • sp1mb AND2 sp1mb expr2
   54      | expr1 • sp1mb RSHIFT2 sp1mb expr2
   55      | expr1 • sp1mb LSHIFT2 sp1mb expr2

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    OR2       reduce using rule 48 (sp1mb)
    AND2      reduce using rule 48 (sp1mb)
    XOR2      reduce using rule 48 (sp1mb)
    LSHIFT2   reduce using rule 48 (sp1mb)
    RSHIFT2   reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 17 (idd1)]
    $default  reduce using rule 17 (idd1)

    sp1m   go to state 29
    sp1mb  go to state 77


State 57

   50 expr1: expr2 •
   57 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   58      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    PLUS2     [reduce using rule 50 (expr1)]
    MINUS2    reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 50 (expr1)]
    $default  reduce using rule 50 (expr1)

    sp1m   go to state 29
    sp1mb  go to state 78


State 58

   56 expr2: expr3 •
   60 expr3: expr3 • sp1mb MULT2 sp1mb expr4
   61      | expr3 • sp1mb DIV2 sp1mb expr4
   62      | expr3 • sp1mb MOD2 sp1mb expr4

    SP2  shift, and go to state 31

    MULT2     reduce using rule 48 (sp1mb)
    DIV2      reduce using rule 48 (sp1mb)
    MOD2      reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 56 (expr2)]
    $default  reduce using rule 56 (expr2)

    sp1m   go to state 29
    sp1mb  go to state 79


State 59

   59 expr3: expr4 •

    $default  reduce using rule 59 (expr3)


State 60

   63 expr4: expr5 •

    $default  reduce using rule 63 (expr4)


State 61

   40 endif1: ENDIF2 sp1mb semibm •

    $default  reduce using rule 40 (endif1)


State 62

   41 else1: ELSE2 sp1mb semibm •

    $default  reduce using rule 41 (else1)


State 63

   18 define1: DEF2 sp1mb idd1 • sp1mb semibm
   19        | DEF2 sp1mb idd1 • sp1mb idd1 sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 80


State 64

   20 undef1: UNDEF2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 81


State 65

   22 err1: ERR2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 82


State 66

   36 msg1: MSG2 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 83


State 67

   39 elifdef1: sp1b ELIFDEF2 sp1m • ID2 sp1m
   47 sp1m: sp1m • SP2

    ID2  shift, and go to state 84
    SP2  shift, and go to state 44


State 68

   21 undef1: sp1b UNDEF2 sp1m •
   47 sp1m: sp1m • SP2

    SP2  shift, and go to state 44

    SP2       [reduce using rule 21 (undef1)]
    $default  reduce using rule 21 (undef1)


State 69

   33 semib: sp1mb SEMI2 •

    $default  reduce using rule 33 (semib)


State 70

   31 semib: sp1mb NL2 •

    $default  reduce using rule 31 (semib)


State 71

   37 mac1: MAC2 sp1b ID2 sp1b • STR2 sp1m

    STR2  shift, and go to state 85


State 72

   24 strx1: ID2 sp1mb •

    $default  reduce using rule 24 (strx1)


State 73

   23 strx1: STR2 sp1mb •
   25      | STR2 sp1mb • PLUS2 sp1mb strx1 sp1mb
   26      | STR2 sp1mb • PLUS2 sp1mb expr1 sp1mb
   28      | STR2 sp1mb • PLUS2 sp1mb STR2

    PLUS2  shift, and go to state 86

    $default  reduce using rule 23 (strx1)


State 74

   38 ifdef1: IFDEF2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 87
    sp1m    go to state 29
    sp1mb   go to state 49


State 75

   64 expr4: sp1mb PAREN12 • sp1mb expr1 sp1mb PAREN22 sp1mb

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 88


State 76

   65 expr5: sp1mb NUM2 • sp1mb

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 89


State 77

   27 strx1: expr1 sp1mb • PLUS2 sp1mb STR2 sp1mb
   51 expr1: expr1 sp1mb • OR2 sp1mb expr2
   52      | expr1 sp1mb • XOR2 sp1mb expr2
   53      | expr1 sp1mb • AND2 sp1mb expr2
   54      | expr1 sp1mb • RSHIFT2 sp1mb expr2
   55      | expr1 sp1mb • LSHIFT2 sp1mb expr2

    PLUS2    shift, and go to state 90
    OR2      shift, and go to state 91
    AND2     shift, and go to state 92
    XOR2     shift, and go to state 93
    LSHIFT2  shift, and go to state 94
    RSHIFT2  shift, and go to state 95


State 78

   57 expr2: expr2 sp1mb • PLUS2 sp1mb expr3
   58      | expr2 sp1mb • MINUS2 sp1mb expr3

    PLUS2   shift, and go to state 96
    MINUS2  shift, and go to state 97


State 79

   60 expr3: expr3 sp1mb • MULT2 sp1mb expr4
   61      | expr3 sp1mb • DIV2 sp1mb expr4
   62      | expr3 sp1mb • MOD2 sp1mb expr4

    MULT2  shift, and go to state 98
    DIV2   shift, and go to state 99
    MOD2   shift, and go to state 100


State 80

   18 define1: DEF2 sp1mb idd1 sp1mb • semibm
   19        | DEF2 sp1mb idd1 sp1mb • idd1 sp1mb semibm

    SEMI2  shift, and go to state 45
    ID2    shift, and go to state 51
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46
    STR2   shift, and go to state 52

    PAREN12   reduce using rule 48 (sp1mb)
    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    NUM2      reduce using rule 48 (sp1mb)
    $default  reduce using rule 29 (semib)

    idd1    go to state 101
    strx1   go to state 54
    semib   go to state 47
    semibm  go to state 102
    sp1m    go to state 29
    sp1mb   go to state 103
    expr1   go to state 56
    expr2   go to state 57
    expr3   go to state 58
    expr4   go to state 59
    expr5   go to state 60


State 81

   20 undef1: UNDEF2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 104
    sp1m    go to state 29
    sp1mb   go to state 49


State 82

   22 err1: ERR2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 105
    sp1m    go to state 29
    sp1mb   go to state 49


State 83

   36 msg1: MSG2 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 106
    sp1m    go to state 29
    sp1mb   go to state 49


State 84

   39 elifdef1: sp1b ELIFDEF2 sp1m ID2 • sp1m

    SP2  shift, and go to state 31

    sp1m  go to state 107


State 85

   37 mac1: MAC2 sp1b ID2 sp1b STR2 • sp1m

    SP2  shift, and go to state 31

    sp1m  go to state 108


State 86

   25 strx1: STR2 sp1mb PLUS2 • sp1mb strx1 sp1mb
   26      | STR2 sp1mb PLUS2 • sp1mb expr1 sp1mb
   28      | STR2 sp1mb PLUS2 • sp1mb STR2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 109


State 87

   38 ifdef1: IFDEF2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 38 (ifdef1)


State 88

   64 expr4: sp1mb PAREN12 sp1mb • expr1 sp1mb PAREN22 sp1mb

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 110
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 89

   65 expr5: sp1mb NUM2 sp1mb •

    $default  reduce using rule 65 (expr5)


State 90

   27 strx1: expr1 sp1mb PLUS2 • sp1mb STR2 sp1mb

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 111


State 91

   51 expr1: expr1 sp1mb OR2 • sp1mb expr2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 112


State 92

   53 expr1: expr1 sp1mb AND2 • sp1mb expr2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 113


State 93

   52 expr1: expr1 sp1mb XOR2 • sp1mb expr2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 114


State 94

   55 expr1: expr1 sp1mb LSHIFT2 • sp1mb expr2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 115


State 95

   54 expr1: expr1 sp1mb RSHIFT2 • sp1mb expr2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 116


State 96

   57 expr2: expr2 sp1mb PLUS2 • sp1mb expr3

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 117


State 97

   58 expr2: expr2 sp1mb MINUS2 • sp1mb expr3

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 118


State 98

   60 expr3: expr3 sp1mb MULT2 • sp1mb expr4

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 119


State 99

   61 expr3: expr3 sp1mb DIV2 • sp1mb expr4

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 120


State 100

   62 expr3: expr3 sp1mb MOD2 • sp1mb expr4

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 121


State 101

   19 define1: DEF2 sp1mb idd1 sp1mb idd1 • sp1mb semibm

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 122


State 102

   18 define1: DEF2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 18 (define1)


State 103

   31 semib: sp1mb • NL2
   33      | sp1mb • SEMI2
   64 expr4: sp1mb • PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb
   65 expr5: sp1mb • NUM2 sp1mb

    PAREN12  shift, and go to state 75
    SEMI2    shift, and go to state 69
    NL2      shift, and go to state 70
    NUM2     shift, and go to state 76


State 104

   20 undef1: UNDEF2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 20 (undef1)


State 105

   22 err1: ERR2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 22 (err1)


State 106

   36 msg1: MSG2 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 36 (msg1)


State 107

   39 elifdef1: sp1b ELIFDEF2 sp1m ID2 sp1m •
   47 sp1m: sp1m • SP2

    SP2  shift, and go to state 44

    SP2       [reduce using rule 39 (elifdef1)]
    $default  reduce using rule 39 (elifdef1)


State 108

   37 mac1: MAC2 sp1b ID2 sp1b STR2 sp1m •
   47 sp1m: sp1m • SP2

    SP2  shift, and go to state 44

    SP2       [reduce using rule 37 (mac1)]
    $default  reduce using rule 37 (mac1)


State 109

   25 strx1: STR2 sp1mb PLUS2 sp1mb • strx1 sp1mb
   26      | STR2 sp1mb PLUS2 sp1mb • expr1 sp1mb
   28      | STR2 sp1mb PLUS2 sp1mb • STR2

    ID2   shift, and go to state 51
    SP2   shift, and go to state 31
    STR2  shift, and go to state 123

    $default  reduce using rule 48 (sp1mb)

    strx1  go to state 124
    sp1m   go to state 29
    sp1mb  go to state 55
    expr1  go to state 125
    expr2  go to state 57
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 110

   51 expr1: expr1 • sp1mb OR2 sp1mb expr2
   52      | expr1 • sp1mb XOR2 sp1mb expr2
   53      | expr1 • sp1mb AND2 sp1mb expr2
   54      | expr1 • sp1mb RSHIFT2 sp1mb expr2
   55      | expr1 • sp1mb LSHIFT2 sp1mb expr2
   64 expr4: sp1mb PAREN12 sp1mb expr1 • sp1mb PAREN22 sp1mb

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 126


State 111

   27 strx1: expr1 sp1mb PLUS2 sp1mb • STR2 sp1mb

    STR2  shift, and go to state 127


State 112

   51 expr1: expr1 sp1mb OR2 sp1mb • expr2

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr2  go to state 128
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 113

   53 expr1: expr1 sp1mb AND2 sp1mb • expr2

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr2  go to state 129
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 114

   52 expr1: expr1 sp1mb XOR2 sp1mb • expr2

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr2  go to state 130
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 115

   55 expr1: expr1 sp1mb LSHIFT2 sp1mb • expr2

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr2  go to state 131
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 116

   54 expr1: expr1 sp1mb RSHIFT2 sp1mb • expr2

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr2  go to state 132
    expr3  go to state 58
    expr4  go to state 59
    expr5  go to state 60


State 117

   57 expr2: expr2 sp1mb PLUS2 sp1mb • expr3

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr3  go to state 133
    expr4  go to state 59
    expr5  go to state 60


State 118

   58 expr2: expr2 sp1mb MINUS2 sp1mb • expr3

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr3  go to state 134
    expr4  go to state 59
    expr5  go to state 60


State 119

   60 expr3: expr3 sp1mb MULT2 sp1mb • expr4

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr4  go to state 135
    expr5  go to state 60


State 120

   61 expr3: expr3 sp1mb DIV2 sp1mb • expr4

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr4  go to state 136
    expr5  go to state 60


State 121

   62 expr3: expr3 sp1mb MOD2 sp1mb • expr4

    SP2  shift, and go to state 31

    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 55
    expr4  go to state 137
    expr5  go to state 60


State 122

   19 define1: DEF2 sp1mb idd1 sp1mb idd1 sp1mb • semibm

    SEMI2  shift, and go to state 45
    SP2    shift, and go to state 31
    NL2    shift, and go to state 46

    SEMI2     [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 29 (semib)]
    NL2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 29 (semib)

    semib   go to state 47
    semibm  go to state 138
    sp1m    go to state 29
    sp1mb   go to state 49


State 123

   23 strx1: STR2 • sp1mb
   25      | STR2 • sp1mb PLUS2 sp1mb strx1 sp1mb
   26      | STR2 • sp1mb PLUS2 sp1mb expr1 sp1mb
   28      | STR2 • sp1mb PLUS2 sp1mb STR2
   28      | STR2 sp1mb PLUS2 sp1mb STR2 •

    SP2  shift, and go to state 31

    $end      reduce using rule 28 (strx1)
    $end      [reduce using rule 48 (sp1mb)]
    PLUS2     reduce using rule 48 (sp1mb)
    PAREN12   reduce using rule 28 (strx1)
    PAREN12   [reduce using rule 48 (sp1mb)]
    SEMI2     reduce using rule 28 (strx1)
    SEMI2     [reduce using rule 48 (sp1mb)]
    ENL2      reduce using rule 28 (strx1)
    ENL2      [reduce using rule 48 (sp1mb)]
    ID2       reduce using rule 28 (strx1)
    ID2       [reduce using rule 48 (sp1mb)]
    ID3       reduce using rule 28 (strx1)
    ID3       [reduce using rule 48 (sp1mb)]
    SP2       [reduce using rule 28 (strx1)]
    SP2       [reduce using rule 48 (sp1mb)]
    NL2       reduce using rule 28 (strx1)
    NL2       [reduce using rule 48 (sp1mb)]
    STR2      reduce using rule 28 (strx1)
    STR2      [reduce using rule 48 (sp1mb)]
    COMMENT2  reduce using rule 28 (strx1)
    COMMENT2  [reduce using rule 48 (sp1mb)]
    NUM2      reduce using rule 28 (strx1)
    NUM2      [reduce using rule 48 (sp1mb)]
    MAC2      reduce using rule 28 (strx1)
    MAC2      [reduce using rule 48 (sp1mb)]
    IFDEF2    reduce using rule 28 (strx1)
    IFDEF2    [reduce using rule 48 (sp1mb)]
    ENDIF2    reduce using rule 28 (strx1)
    ENDIF2    [reduce using rule 48 (sp1mb)]
    ELSE2     reduce using rule 28 (strx1)
    ELSE2     [reduce using rule 48 (sp1mb)]
    ELIFDEF2  reduce using rule 28 (strx1)
    ELIFDEF2  [reduce using rule 48 (sp1mb)]
    DEF2      reduce using rule 28 (strx1)
    DEF2      [reduce using rule 48 (sp1mb)]
    UNDEF2    reduce using rule 28 (strx1)
    UNDEF2    [reduce using rule 48 (sp1mb)]
    ERR2      reduce using rule 28 (strx1)
    ERR2      [reduce using rule 48 (sp1mb)]
    MSG2      reduce using rule 28 (strx1)
    MSG2      [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 28 (strx1)

    sp1m   go to state 29
    sp1mb  go to state 73


State 124

   25 strx1: STR2 sp1mb PLUS2 sp1mb strx1 • sp1mb

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 139


State 125

   26 strx1: STR2 sp1mb PLUS2 sp1mb expr1 • sp1mb
   27      | expr1 • sp1mb PLUS2 sp1mb STR2 sp1mb
   51 expr1: expr1 • sp1mb OR2 sp1mb expr2
   52      | expr1 • sp1mb XOR2 sp1mb expr2
   53      | expr1 • sp1mb AND2 sp1mb expr2
   54      | expr1 • sp1mb RSHIFT2 sp1mb expr2
   55      | expr1 • sp1mb LSHIFT2 sp1mb expr2

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 140


State 126

   51 expr1: expr1 sp1mb • OR2 sp1mb expr2
   52      | expr1 sp1mb • XOR2 sp1mb expr2
   53      | expr1 sp1mb • AND2 sp1mb expr2
   54      | expr1 sp1mb • RSHIFT2 sp1mb expr2
   55      | expr1 sp1mb • LSHIFT2 sp1mb expr2
   64 expr4: sp1mb PAREN12 sp1mb expr1 sp1mb • PAREN22 sp1mb

    OR2      shift, and go to state 91
    AND2     shift, and go to state 92
    XOR2     shift, and go to state 93
    LSHIFT2  shift, and go to state 94
    RSHIFT2  shift, and go to state 95
    PAREN22  shift, and go to state 141


State 127

   27 strx1: expr1 sp1mb PLUS2 sp1mb STR2 • sp1mb

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 142


State 128

   51 expr1: expr1 sp1mb OR2 sp1mb expr2 •
   57 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   58      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    PLUS2     [reduce using rule 51 (expr1)]
    MINUS2    reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 51 (expr1)]
    $default  reduce using rule 51 (expr1)

    sp1m   go to state 29
    sp1mb  go to state 78


State 129

   53 expr1: expr1 sp1mb AND2 sp1mb expr2 •
   57 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   58      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    PLUS2     [reduce using rule 53 (expr1)]
    MINUS2    reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 53 (expr1)]
    $default  reduce using rule 53 (expr1)

    sp1m   go to state 29
    sp1mb  go to state 78


State 130

   52 expr1: expr1 sp1mb XOR2 sp1mb expr2 •
   57 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   58      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    PLUS2     [reduce using rule 52 (expr1)]
    MINUS2    reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 52 (expr1)]
    $default  reduce using rule 52 (expr1)

    sp1m   go to state 29
    sp1mb  go to state 78


State 131

   55 expr1: expr1 sp1mb LSHIFT2 sp1mb expr2 •
   57 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   58      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    PLUS2     [reduce using rule 55 (expr1)]
    MINUS2    reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 55 (expr1)]
    $default  reduce using rule 55 (expr1)

    sp1m   go to state 29
    sp1mb  go to state 78


State 132

   54 expr1: expr1 sp1mb RSHIFT2 sp1mb expr2 •
   57 expr2: expr2 • sp1mb PLUS2 sp1mb expr3
   58      | expr2 • sp1mb MINUS2 sp1mb expr3

    SP2  shift, and go to state 31

    PLUS2     reduce using rule 48 (sp1mb)
    PLUS2     [reduce using rule 54 (expr1)]
    MINUS2    reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 54 (expr1)]
    $default  reduce using rule 54 (expr1)

    sp1m   go to state 29
    sp1mb  go to state 78


State 133

   57 expr2: expr2 sp1mb PLUS2 sp1mb expr3 •
   60 expr3: expr3 • sp1mb MULT2 sp1mb expr4
   61      | expr3 • sp1mb DIV2 sp1mb expr4
   62      | expr3 • sp1mb MOD2 sp1mb expr4

    SP2  shift, and go to state 31

    MULT2     reduce using rule 48 (sp1mb)
    DIV2      reduce using rule 48 (sp1mb)
    MOD2      reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 57 (expr2)]
    $default  reduce using rule 57 (expr2)

    sp1m   go to state 29
    sp1mb  go to state 79


State 134

   58 expr2: expr2 sp1mb MINUS2 sp1mb expr3 •
   60 expr3: expr3 • sp1mb MULT2 sp1mb expr4
   61      | expr3 • sp1mb DIV2 sp1mb expr4
   62      | expr3 • sp1mb MOD2 sp1mb expr4

    SP2  shift, and go to state 31

    MULT2     reduce using rule 48 (sp1mb)
    DIV2      reduce using rule 48 (sp1mb)
    MOD2      reduce using rule 48 (sp1mb)
    SP2       [reduce using rule 58 (expr2)]
    $default  reduce using rule 58 (expr2)

    sp1m   go to state 29
    sp1mb  go to state 79


State 135

   60 expr3: expr3 sp1mb MULT2 sp1mb expr4 •

    $default  reduce using rule 60 (expr3)


State 136

   61 expr3: expr3 sp1mb DIV2 sp1mb expr4 •

    $default  reduce using rule 61 (expr3)


State 137

   62 expr3: expr3 sp1mb MOD2 sp1mb expr4 •

    $default  reduce using rule 62 (expr3)


State 138

   19 define1: DEF2 sp1mb idd1 sp1mb idd1 sp1mb semibm •

    $default  reduce using rule 19 (define1)


State 139

   25 strx1: STR2 sp1mb PLUS2 sp1mb strx1 sp1mb •

    $default  reduce using rule 25 (strx1)


State 140

   26 strx1: STR2 sp1mb PLUS2 sp1mb expr1 sp1mb •
   27      | expr1 sp1mb • PLUS2 sp1mb STR2 sp1mb
   51 expr1: expr1 sp1mb • OR2 sp1mb expr2
   52      | expr1 sp1mb • XOR2 sp1mb expr2
   53      | expr1 sp1mb • AND2 sp1mb expr2
   54      | expr1 sp1mb • RSHIFT2 sp1mb expr2
   55      | expr1 sp1mb • LSHIFT2 sp1mb expr2

    PLUS2    shift, and go to state 90
    OR2      shift, and go to state 91
    AND2     shift, and go to state 92
    XOR2     shift, and go to state 93
    LSHIFT2  shift, and go to state 94
    RSHIFT2  shift, and go to state 95

    $default  reduce using rule 26 (strx1)


State 141

   64 expr4: sp1mb PAREN12 sp1mb expr1 sp1mb PAREN22 • sp1mb

    SP2  shift, and go to state 31

    SP2       [reduce using rule 48 (sp1mb)]
    $default  reduce using rule 48 (sp1mb)

    sp1m   go to state 29
    sp1mb  go to state 143


State 142

   27 strx1: expr1 sp1mb PLUS2 sp1mb STR2 sp1mb •

    $default  reduce using rule 27 (strx1)


State 143

   64 expr4: sp1mb PAREN12 sp1mb expr1 sp1mb PAREN22 sp1mb •

    $default  reduce using rule 64 (expr4)
