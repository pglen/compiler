 State 0:
          main ::= * in
      (1) in ::= *
          in ::= * in state NEWLINE

                          main accept
                            in shift  1
                     {default} reduce 1

State 1:
      (0) main ::= in *
          in ::= in * state NEWLINE
          state ::= * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * NUM

                             $ reduce 0
                           NUM shift  13
                          expr shift  4
                         state shift  2

State 2:
          in ::= in state * NEWLINE

                       NEWLINE shift  3

State 3:
      (2) in ::= in state NEWLINE *

                     {default} reduce 2

State 4:
      (3) state ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                          PLUS shift  7
                         MINUS shift  5
                        DIVIDE shift  11
                         TIMES shift  9
                       NEWLINE reduce 3

State 5:
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * NUM

                           NUM shift  13
                          expr shift  6

State 6:
          expr ::= expr * MINUS expr
      (4) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                        DIVIDE shift  11
                         TIMES shift  9
                     {default} reduce 4

State 7:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * NUM

                           NUM shift  13
                          expr shift  8

State 8:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
      (5) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                        DIVIDE shift  11
                         TIMES shift  9
                     {default} reduce 5

State 9:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * NUM

                           NUM shift  13
                          expr shift  10

State 10:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
      (6) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr

                     {default} reduce 6

State 11:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * NUM

                           NUM shift  13
                          expr shift  12

State 12:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
      (7) expr ::= expr DIVIDE expr *

                     {default} reduce 7

State 13:
      (8) expr ::= NUM *

                     {default} reduce 8

